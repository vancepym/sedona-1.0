//
// Copyright (c) 2007 Tridium, Inc
// Licensed under the Academic Free License version 3.0
//
// History:
//   10 Jan 07  Andy Saunders  Creation
//   27 Apr 07  Brian Frank    Port from Java to Sedona
//

**
** B2F 16 bit binary to float encoder object
**
** out   = encoded value of inputs, with in16 the MSB and in1 as the LSB.
** count = sum of the inputs that are active.
**
@niagaraIcon="module://icons/x16/control/util/switch.png"
public class B2F
  extends Component
{
  @readonly property float out
  @readonly property float count
  property bool in1
  property bool in2
  property bool in3
  property bool in4
  property bool in5
  property bool in6
  property bool in7
  property bool in8
  property bool in9
  property bool in10
  property bool in11
  property bool in12
  property bool in13
  property bool in14
  property bool in15
  property bool in16

  virtual override void execute()
  {
    int value = 0
    int icount = 0
    int mask = 1

    // reflective loop from in1 to in16
    for(int i = B2F.in1.id; i <= B2F.in16.id; i++)
    {
      if (getBool(type.slots[i]))
      {
        value = value | mask
        icount++
      }

      mask = mask << 1
    }

    out   = (float)value
    count = (float)icount
  }

}
