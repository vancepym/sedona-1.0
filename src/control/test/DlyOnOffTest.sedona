//
// Copyright (c) 2007 Tridium, Inc
// Licensed under the Academic Free License version 3.0
//
// History:
//   17 May 07  Andy Sunders  Creation
//

**
** DlyOnOffTest
**
class DlyOnOffTest
  extends Test
{
  static inline DlyOn dlyOn
  static inline DlyOff dlyOff

  static void test()
  {
    // Not run in app context, so we need to call start() explicitly
    dlyOn.start()
    dlyOff.start()

    // Set both delays to 1 sec
    dlyOn.delayTime = 1.0
    dlyOff.delayTime = 1.0

    // Set each input to untriggered value & verify output remains untriggered
    dlyOn.in = false
    dlyOff.in = true
    dlyOn.execute()
    dlyOff.execute()
    assert(dlyOn.out == false)
    assert(dlyOff.out == true)


    // Set each input to triggered value & loop until delay expires

    // Note we stop a little before the full 1000ms delay period, to avoid
    // reaching the delay end time in between the two calls to execute().
    dlyOn.in = true
    dlyOff.in = false

    long startTicks = Sys.ticks()
    while( (Sys.ticks() - startTicks) < 995ms)
    {
      dlyOn.execute()
      dlyOff.execute()

      // Verify outputs don't change early
      assert(dlyOn.out == false)
      assert(dlyOff.out == true)
    }

    // Wait a little longer, then verify outputs have changed
    startTicks = Sys.ticks()
    while((Sys.ticks() - startTicks) < 20ms)
    {
    }

    dlyOn.execute()
    dlyOff.execute()

    // Verify outputs have changed now
    assert(dlyOn.out == true)
    assert(dlyOff.out == false)
  }


}
